{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/Video/Video.js\",\n    _s = $RefreshSig$();\n\nimport \"./Video.scss\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Video(props) {\n  _s();\n\n  //Ref to refresh video on url change\n  const videoRef = useRef();\n  const previousId = useRef(props.match.params.id);\n  useEffect(() => {\n    if (previousId.current !== props.match.params.id) {\n      videoRef === null || videoRef === void 0 ? void 0 : videoRef.current.load();\n    }\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video\",\n      poster: props.videoDetails.image,\n      src: `${props.videoDetails.video}/?api_key=key`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause\",\n          id: \"play-pause\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../assets/icons/likes.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"full-screen\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../assets/icons/fullscreen.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"volume\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../assets/icons/volume_up.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"SujEh0C2EosgWj/QVWSzC08EYYg=\");\n\n_c = Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/Video/Video.js"],"names":["useEffect","useRef","Video","props","videoRef","previousId","match","params","id","current","load","videoDetails","image","video"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC;AACA,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAACE,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAzB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,UAAU,CAACI,OAAX,KAAuBN,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAA7C,EAAiD;AAC/CJ,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEK,OAAV,CAAkBC,IAAlB;AACD;AACF,GAJQ,EAIN,CAACP,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEJ,QAAZ;AAAsB,MAAA,SAAS,EAAC,OAAhC;AAAwC,MAAA,MAAM,EAAED,KAAK,CAACQ,YAAN,CAAmBC,KAAnE;AAA0E,MAAA,GAAG,EAAG,GAAET,KAAK,CAACQ,YAAN,CAAmBE,KAAM;AAA3G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,EAAE,EAAC,YAAlC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/BuBX,K;;KAAAA,K","sourcesContent":["import \"./Video.scss\"\nimport { useEffect, useRef } from \"react\";\n\nexport default function Video(props) {\n  //Ref to refresh video on url change\n  const videoRef = useRef()\n  const previousId = useRef(props.match.params.id)\n\n  useEffect(() => {\n    if(previousId.current !== props.match.params.id) {\n      videoRef?.current.load()\n    }\n  }, [props.match.params.id])\n\n  return (\n    <div className='video-container'>\n      <video ref={videoRef} className='video' poster={props.videoDetails.image} src={`${props.videoDetails.video}/?api_key=key`}/>\n      <div className='controls'>\n        <div className='video-button'>\n          <button className='play-pause' id='play-pause'>\n            <img src='../../assets/icons/likes.svg'/>\n          </button>\n        </div>\n        <div className='right-container'>\n          <button className='full-screen'>\n            <img src='../../assets/icons/fullscreen.svg'/>\n          </button>\n          <button className='volume'>\n            <img src='../../assets/icons/volume_up.svg'/>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}