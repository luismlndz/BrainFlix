{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js\",\n    _s = $RefreshSig$();\n\nimport \"./CommentSection.scss\";\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default function CommentSection(props) {\n  _s();\n\n  const [comments, setComments] = useState([]); // state = {\n  //     comments: []\n  // }\n\n  useEffect(() => {\n    console.log('comment section mount');\n    axios.get(`${apiURL}/videos/${props.videoDetails.id}/`).then(response => {\n      setComments(response.data.comments);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // componentDidMount() {\n  //     console.log('comment section mount')\n  //     axios.get(`${apiURL}/videos/${this.props.videoDetails.id}/`)\n  //     .then((response) => {\n  //         this.setState({comments: response.data.comments})\n  //     })\n  //     .catch((error) => {\n  //         console.log(error)\n  //     })\n  // }\n  // componentDidUpdate(prevProps) {\n  //     if(prevProps.videoDetails.comments !== this.props.videoDetails.comments){\n  //         this.componentDidMount()\n  //     }\n  // }\n\n  const handleAdd = comment => {\n    axios.post(`${apiURL}/videos/${this.props.videoDetails.id}/comments/`, comment).then(response => {\n      this.setState({\n        comments: this.state.comments.concat(response.data)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleDelete = id => {\n    axios.delete(`${apiURL}/videos/${this.props.videoDetails.id}/comments/${id}`).then(res => {\n      this.setState({\n        comments: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-count\",\n      children: `${this.state.comments.length} Comments`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      addComment: this.handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), this.state.comments.sort((x, y) => {\n      return y.timestamp - x.timestamp;\n    }).map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n      deleteComment: this.handleDelete,\n      comment: comment\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(CommentSection, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js"],"names":["CommentForm","Comment","axios","useEffect","useState","apiURL","CommentSection","props","comments","setComments","console","log","get","videoDetails","id","then","response","data","catch","error","handleAdd","comment","post","setState","state","concat","handleDelete","delete","res","length","sort","x","y","timestamp","map","index"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAD0C,CAE1C;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEP,MAAO,WAAUE,KAAK,CAACM,YAAN,CAAmBC,EAAG,GAApD,EACCC,IADD,CACOC,QAAD,IAAc;AAChBP,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAcT,QAAf,CAAX;AACH,KAHD,EAICU,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GATQ,EASN,EATM,CAAT,CAN0C,CAiB1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,SAAS,GAAIC,OAAD,IAAa;AAC3BnB,IAAAA,KAAK,CAACoB,IAAN,CAAY,GAAEjB,MAAO,WAAU,KAAKE,KAAL,CAAWM,YAAX,CAAwBC,EAAG,YAA1D,EAAuEO,OAAvE,EACCN,IADD,CACOC,QAAD,IAAc;AAChB,WAAKO,QAAL,CAAc;AAACf,QAAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWhB,QAAX,CAAoBiB,MAApB,CAA2BT,QAAQ,CAACC,IAApC;AAAX,OAAd;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GARD;;AAUA,QAAMO,YAAY,GAAIZ,EAAD,IAAQ;AACzBZ,IAAAA,KAAK,CAACyB,MAAN,CAAc,GAAEtB,MAAO,WAAU,KAAKE,KAAL,CAAWM,YAAX,CAAwBC,EAAG,aAAYA,EAAG,EAA3E,EACCC,IADD,CACOa,GAAD,IAAS;AACX,WAAKL,QAAL,CAAc;AAACf,QAAAA,QAAQ,EAAEoB,GAAG,CAACX;AAAf,OAAd;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA+B,GAAE,KAAKK,KAAL,CAAWhB,QAAX,CAAoBqB,MAAO;AAA5D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,UAAU,EAAE,KAAKT;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGK,KAAKI,KAAL,CAAWhB,QAAX,CAAoBsB,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChC,aAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACH,KAFA,EAEEC,GAFF,CAEM,CAACb,OAAD,EAAUc,KAAV,kBACH,QAAC,OAAD;AAAS,MAAA,aAAa,EAAE,KAAKT,YAA7B;AAAuD,MAAA,OAAO,EAAEL;AAAhE,OAAgDc,KAAhD;AAAA;AAAA;AAAA;AAAA,YAHH,CAHL;AAAA,kBADJ;AAWH;;GAjEuB7B,c;;KAAAA,c","sourcesContent":["import \"./CommentSection.scss\"\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst apiURL = 'http://localhost:8080'\n\nexport default function CommentSection(props) {\n    const [comments, setComments] = useState([])\n    // state = {\n    //     comments: []\n    // }\n\n    useEffect(()=> {\n        console.log('comment section mount')\n        axios.get(`${apiURL}/videos/${props.videoDetails.id}/`)\n        .then((response) => {\n            setComments(response.data.comments)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }, [])\n\n    // componentDidMount() {\n    //     console.log('comment section mount')\n    //     axios.get(`${apiURL}/videos/${this.props.videoDetails.id}/`)\n    //     .then((response) => {\n    //         this.setState({comments: response.data.comments})\n    //     })\n    //     .catch((error) => {\n    //         console.log(error)\n    //     })\n    // }\n\n    // componentDidUpdate(prevProps) {\n    //     if(prevProps.videoDetails.comments !== this.props.videoDetails.comments){\n    //         this.componentDidMount()\n    //     }\n    // }\n\n    const handleAdd = (comment) => {\n        axios.post(`${apiURL}/videos/${this.props.videoDetails.id}/comments/`, comment)\n        .then((response) => {\n            this.setState({comments: this.state.comments.concat(response.data)})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    const handleDelete = (id) => {\n        axios.delete(`${apiURL}/videos/${this.props.videoDetails.id}/comments/${id}`)\n        .then((res) => {\n            this.setState({comments: res.data})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <>\n            <p className=\"comment-count\">{`${this.state.comments.length} Comments`}</p>\n            <CommentForm addComment={this.handleAdd}/>\n            {this.state.comments.sort((x, y) => {\n                return y.timestamp - x.timestamp\n            }).map((comment, index) => (\n                <Comment deleteComment={this.handleDelete} key={index} comment={comment}/>\n            ))}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}