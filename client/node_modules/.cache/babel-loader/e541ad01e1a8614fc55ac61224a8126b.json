{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js\";\nimport { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://project-2-api.herokuapp.com';\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentVideo: {},\n      videos: [],\n      isLoading: true\n    };\n\n    this.handleUpdate = video => {\n      const newVideo = this.state.videos.find(vid => {\n        return vid.id === video.id;\n      });\n      this.setState({\n        currentVideo: newVideo\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n      this.setState({\n        currentVideo: response.data.find(video => {\n          return video.id === this.props.match.params.id;\n        })\n      }, () => {\n        const filteredVideos = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          videos: filteredVideos\n        }, () => {\n          this.setState({\n            isLoading: false\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n        const filteredArray = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          videos: filteredArray\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  } // showResults = () => {\n  //   if(!this.state.isLoading) {\n  //     return (\n  //       <>\n  //       <Video currentVideo={this.state.currentVideo}/>\n  //       <main>\n  //         <div className=\"left-containter\">\n  //           <VideoDetails currentVideo={this.state.currentVideo}/>\n  //         </div>\n  //         <NextVideos handleUpdate={this.handleUpdate} videos={this.state.videos}/>\n  //       </main>\n  //       </>\n  //     )\n  //   } else {\n  //     return <p>Loading...</p>\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Video, {\n          currentVideo: this.state.currentVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-containter\",\n            children: /*#__PURE__*/_jsxDEV(VideoDetails, {\n              currentVideo: this.state.currentVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n            handleUpdate: this.handleUpdate,\n            videos: this.state.videos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js"],"names":["Component","Video","VideoDetails","NextVideos","axios","apiURL","apiKEY","Home","state","currentVideo","videos","isLoading","handleUpdate","video","newVideo","find","vid","id","setState","componentDidMount","get","then","response","data","props","match","params","filteredVideos","filter","catch","error","console","log","componentDidUpdate","prevProps","prevState","filteredArray","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'https://project-2-api.herokuapp.com'\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796'\n\nexport default class Home extends Component {\n\n  state = {\n    currentVideo: {},\n    videos: [],\n    isLoading: true\n  }\n\n  componentDidMount() {\n    axios.get(`${apiURL}/videos/${apiKEY}`)\n    .then((response) => {\n      this.setState({\n        currentVideo: response.data.find((video) => {\n          return video.id === this.props.match.params.id\n        })\n      }, () => {\n        const filteredVideos = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({videos: filteredVideos}, () => {\n          this.setState({isLoading: false})\n        })\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n  handleUpdate = (video) => {\n    const newVideo = this.state.videos.find((vid) => {\n      return vid.id === video.id\n    })\n    this.setState({currentVideo: newVideo})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.match.params.id !== this.props.match.params.id) {\n      axios.get(`${apiURL}/videos/${apiKEY}`)\n      .then((response) => {\n        const filteredArray = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({videos: filteredArray})\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n    }\n  }\n\n  // showResults = () => {\n  //   if(!this.state.isLoading) {\n  //     return (\n  //       <>\n  //       <Video currentVideo={this.state.currentVideo}/>\n  //       <main>\n  //         <div className=\"left-containter\">\n  //           <VideoDetails currentVideo={this.state.currentVideo}/>\n  //         </div>\n  //         <NextVideos handleUpdate={this.handleUpdate} videos={this.state.videos}/>\n  //       </main>\n  //       </>\n  //     )\n  //   } else {\n  //     return <p>Loading...</p>\n  //   }\n  // }\n\n  render() {\n    return (\n      <>\n      {/* {this.showResults()} */}\n      {this.state.isLoading && <>\n        <Video currentVideo={this.state.currentVideo}/>\n        <main>\n          <div className=\"left-containter\">\n            <VideoDetails currentVideo={this.state.currentVideo}/>\n          </div>\n          <NextVideos handleUpdate={this.handleUpdate} videos={this.state.videos}/>\n        </main>\n        </>}\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}