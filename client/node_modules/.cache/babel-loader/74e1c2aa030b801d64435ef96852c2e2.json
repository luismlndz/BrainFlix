{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/Video/Video.js\",\n    _s = $RefreshSig$();\n\nimport \"./Video.scss\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Video(props) {\n  _s();\n\n  //Ref to refresh video on url change\n  const videoRef = useRef();\n  const previousId = useRef(props.match.params.id);\n  useEffect(() => {\n    if (previousId.current !== props.match.params.id) {\n      videoRef === null || videoRef === void 0 ? void 0 : videoRef.current.load();\n    }\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video\",\n      poster: props.videoDetails.image,\n      src: `${props.videoDetails.video}/?api_key=key`,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"SujEh0C2EosgWj/QVWSzC08EYYg=\");\n\n_c = Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/Video/Video.js"],"names":["useEffect","useRef","Video","props","videoRef","previousId","match","params","id","current","load","videoDetails","image","video"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC;AACA,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAACE,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAzB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,UAAU,CAACI,OAAX,KAAuBN,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAA7C,EAAiD;AAC/CJ,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEK,OAAV,CAAkBC,IAAlB;AACD;AACF,GAJQ,EAIN,CAACP,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AACA,MAAA,GAAG,EAAEJ,QADL;AAEA,MAAA,SAAS,EAAC,OAFV;AAGA,MAAA,MAAM,EAAED,KAAK,CAACQ,YAAN,CAAmBC,KAH3B;AAIA,MAAA,GAAG,EAAG,GAAET,KAAK,CAACQ,YAAN,CAAmBE,KAAM,eAJjC;AAKA,MAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArBuBX,K;;KAAAA,K","sourcesContent":["import \"./Video.scss\"\nimport { useEffect, useRef } from \"react\";\n\nexport default function Video(props) {\n  //Ref to refresh video on url change\n  const videoRef = useRef()\n  const previousId = useRef(props.match.params.id)\n\n  useEffect(() => {\n    if(previousId.current !== props.match.params.id) {\n      videoRef?.current.load()\n    }\n  }, [props.match.params.id])\n\n  return (\n    <div className='video-container'>\n      <video \n      ref={videoRef} \n      className='video' \n      poster={props.videoDetails.image} \n      src={`${props.videoDetails.video}/?api_key=key`}\n      controls/>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}