{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js\";\nimport { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: {},\n      nextVideos: [],\n      isLoading: true\n    };\n  }\n\n  // Set current video to url ID and then call api for video details & filter next videos\n  componentDidMount() {\n    axios.get(`${apiURL}/videos`).then(response => {\n      let current = response.data.find(video => {\n        return video.id === this.props.match.params.id;\n      });\n      this.setState({\n        nextVideos: response.data.filter(video => {\n          return video.id !== this.props.match.params.id;\n        })\n      });\n      return current;\n    }).then(current => {\n      axios.get(`${apiURL}/videos/${current.id}`).then(response => {\n        this.setState({\n          video: response.data,\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // Update only if url changes or if comments are added / deleted\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.componentDidMount();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !this.state.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Video, {\n          videoDetails: this.state.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-containter\",\n            children: /*#__PURE__*/_jsxDEV(VideoDetails, { ...this.props,\n              videoDetails: this.state.video\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n            videos: this.state.nextVideos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If this takes too long, check server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js"],"names":["Component","Video","VideoDetails","NextVideos","axios","apiURL","Home","state","video","nextVideos","isLoading","componentDidMount","get","then","response","current","data","find","id","props","match","params","setState","filter","catch","error","console","log","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'http://localhost:8080'\n\nexport default class Home extends Component{\n\n  state = {\n    video: {},\n    nextVideos: [],\n    isLoading: true\n  }\n\n  // Set current video to url ID and then call api for video details & filter next videos\n  componentDidMount() {\n    axios.get(`${apiURL}/videos`)\n    .then((response) => {\n      let current = response.data.find((video) => {\n        return video.id === this.props.match.params.id\n      })\n      this.setState({\n        nextVideos: response.data.filter((video) => {\n          return video.id !== this.props.match.params.id\n        })\n      })\n      return current\n    })\n    .then((current) => {\n      axios.get(`${apiURL}/videos/${current.id}`)\n      .then((response) => {\n        this.setState({\n          video: response.data,\n          isLoading: false\n        })\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n  // Update only if url changes or if comments are added / deleted\n  componentDidUpdate(prevProps) {\n    if(prevProps.match.params.id !== this.props.match.params.id) {\n      this.componentDidMount()\n    }\n  }\n\n  render() {\n    return (\n      <>\n      {!this.state.isLoading ? \n        <>\n          <Video videoDetails={this.state.video}/>\n          <main>\n            <div className=\"left-containter\">\n              <VideoDetails {...this.props} videoDetails={this.state.video}/>\n            </div>\n            <NextVideos videos={this.state.nextVideos}/>\n          </main>\n        </>\n      : <div className=\"loading\">\n          <p>Loading...</p>\n          <p>If this takes too long, check server</p>\n        </div>}\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}