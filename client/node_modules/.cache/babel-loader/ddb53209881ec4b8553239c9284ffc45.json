{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/components/CommentSection.js/CommentSection.js\";\nimport { Component } from \"react\";\nimport \"./CommentSection.scss\";\nimport CommentForm from \"./CommentForm/CommentForm\";\nimport Comment from \"./Comment/Comment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://project-2-api.herokuapp.com';\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796';\nexport default class CommentSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: []\n    };\n\n    this.addComment = comment => {//Will be implemented in future sprint\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${apiURL}/videos/${this.props.currentVideo.id}/${apiKEY}`).then(response => {\n      // console.log(response.data.comments)\n      this.setState({\n        comments: response.data.comments\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps);\n\n    if (prevState.comments !== this.state.comments) {\n      //CHANGE\n      axios.get(`${apiURL}/videos/${this.props.currentVideo.id}/${apiKEY}`).then(response => {\n        // console.log(response.data.comments)\n        this.setState({\n          comments: response.data.comments\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-count\",\n        children: `${this.state.comments.length} Comments`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this.addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), this.state.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/components/CommentSection.js/CommentSection.js"],"names":["Component","CommentForm","Comment","axios","apiURL","apiKEY","CommentSection","state","comments","addComment","comment","componentDidMount","get","props","currentVideo","id","then","response","setState","data","catch","error","console","log","componentDidUpdate","prevProps","prevState","render","length","map","index"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,MAAM,GAAG,qCAAf;AACA,MAAMC,MAAM,GAAG,+CAAf;AAEA,eAAe,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAElDO,KAFkD,GAE1C;AACJC,MAAAA,QAAQ,EAAE;AADN,KAF0C;;AAAA,SA+BlDC,UA/BkD,GA+BpCC,OAAD,IAAa,CACtB;AACH,KAjCiD;AAAA;;AAMlDC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,KAAK,CAACS,GAAN,CAAW,GAAER,MAAO,WAAU,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,EAAG,IAAGV,MAAO,EAAnE,EACCW,IADD,CACOC,QAAD,IAAc;AAChB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,QAAQ,EAAES,QAAQ,CAACE,IAAT,CAAcX;AAAzB,OAAd;AACH,KAJD,EAKCY,KALD,CAKQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPD;AAQH;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;;AACA,QAAGC,SAAS,CAAClB,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAArC,EAA+C;AAAE;AAC/CL,MAAAA,KAAK,CAACS,GAAN,CAAW,GAAER,MAAO,WAAU,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,EAAG,IAAGV,MAAO,EAAnE,EACCW,IADD,CACOC,QAAD,IAAc;AAClB;AACA,aAAKC,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAAES,QAAQ,CAACE,IAAT,CAAcX;AAAzB,SAAd;AACD,OAJD,EAKCY,KALD,CAKQC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAPD;AAQD;AACJ;;AAMDM,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,kBAA+B,GAAE,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,MAAO;AAA5D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKnB;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKF,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwB,CAACnB,OAAD,EAAUoB,KAAV,kBACrB,QAAC,OAAD;AAAqB,QAAA,OAAO,EAAEpB;AAA9B,SAAcoB,KAAd;AAAA;AAAA;AAAA;AAAA,cADH,CAHL;AAAA,oBADA;AAQH;;AA5CiD","sourcesContent":["import {Component} from \"react\"\nimport \"./CommentSection.scss\"\nimport CommentForm from \"./CommentForm/CommentForm\";\nimport Comment from \"./Comment/Comment\";\nimport axios from \"axios\";\nconst apiURL = 'https://project-2-api.herokuapp.com'\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796'\n\nexport default class CommentSection extends Component {\n\n    state = {\n        comments: []\n    }\n\n    componentDidMount() {\n        axios.get(`${apiURL}/videos/${this.props.currentVideo.id}/${apiKEY}`)\n        .then((response) => {\n            // console.log(response.data.comments)\n            this.setState({comments: response.data.comments})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(prevProps)\n        if(prevState.comments !== this.state.comments) { //CHANGE\n          axios.get(`${apiURL}/videos/${this.props.currentVideo.id}/${apiKEY}`)\n          .then((response) => {\n            // console.log(response.data.comments)\n            this.setState({comments: response.data.comments})\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n        }\n    }\n\n    addComment = (comment) => {\n        //Will be implemented in future sprint\n    }\n\n    render() {\n        return (\n        <>\n            <p className=\"comment-count\">{`${this.state.comments.length} Comments`}</p>\n            <CommentForm addComment={this.addComment}/>\n            {this.state.comments.map((comment, index) => (\n                <Comment key={index} comment={comment}/>\n            ))}\n        </>);\n    }\n}"]},"metadata":{},"sourceType":"module"}