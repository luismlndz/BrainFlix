{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default function Home(props) {\n  _s();\n\n  const [currentVideo, setCurrentVideo] = useState({});\n  const [currentVideoDetails, setCurrentVideoDetails] = useState({});\n  const [nextVideos, setNextVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // state = {\n  //   currentVideo: {},\n  //   currentVideoDetails: {\n  //     timestamp: 0,\n  //     comments: []\n  //   },\n  //   nextVideos: [],\n  //   isLoading: true\n  // }\n\n  useEffect(() => {\n    console.log('home mount');\n    axios.get(`${apiURL}/videos`).then(response => {\n      console.log(response);\n      setCurrentVideo(response.data.find(video => {\n        return video.id === props.match.params.id;\n      }));\n    });\n    axios.get(`${apiURL}/videos/${currentVideo.id}}`).then(response => {\n      setCurrentVideoDetails(response.data);\n      setNextVideos(filteredVideos);\n      setIsLoading(false);\n    }).catch(error => {\n      console.log(error);\n    });\n    const filteredVideos = response.data.filter(video => {\n      return video.id !== currentVideo.id;\n    });\n  }, [props.match.params.id]); // Set current video to url ID and then call api for video details & filter next videos\n  // componentDidMount() {\n  //   console.log('home mount')\n  //   axios.get(`${apiURL}/videos`)\n  //   .then((response) => {\n  //     this.setState({\n  //       currentVideo: response.data.find((video) => {\n  //         return video.id === this.props.match.params.id\n  //       })\n  //     }, () => {\n  //       axios.get(`${apiURL}/videos/${this.state.currentVideo.id}`)\n  //       .then((response) => {\n  //           this.setState({\n  //             currentVideoDetails: response.data,\n  //             nextVideos: filteredVideos, \n  //             isLoading: false\n  //           })\n  //       })\n  //       .catch((error) => {\n  //           console.log(error)\n  //       })\n  //       const filteredVideos = response.data.filter((video) => {\n  //         return video.id !== this.state.currentVideo.id\n  //       })\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n  // Update only if url changes or if comments are added / deleted\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: currentVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-containter\",\n          children: /*#__PURE__*/_jsxDEV(VideoDetails, { ...props,\n            videoDetails: currentVideoDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n          videos: nextVideos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If this takes too long, check server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"hmO59Yl9YcqX4oHe6uEcihy8y+c=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js"],"names":["Component","useState","useEffect","Video","VideoDetails","NextVideos","axios","apiURL","Home","props","currentVideo","setCurrentVideo","currentVideoDetails","setCurrentVideoDetails","nextVideos","setNextVideos","isLoading","setIsLoading","console","log","get","then","response","data","find","video","id","match","params","filteredVideos","catch","error","filter"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'http://localhost:8080'\n\n\nexport default function Home(props) {\n  const [currentVideo, setCurrentVideo] = useState({})\n  const [currentVideoDetails, setCurrentVideoDetails] = useState({})\n  const [nextVideos, setNextVideos] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  // state = {\n  //   currentVideo: {},\n  //   currentVideoDetails: {\n  //     timestamp: 0,\n  //     comments: []\n  //   },\n  //   nextVideos: [],\n  //   isLoading: true\n  // }\n\n  useEffect(() => {\n    console.log('home mount')\n    axios.get(`${apiURL}/videos`)\n    .then((response) => {\n      console.log(response)\n      setCurrentVideo(response.data.find((video) => {\n        return video.id === props.match.params.id\n      }))\n    })\n\n    axios.get(`${apiURL}/videos/${currentVideo.id}}`)\n    .then((response) => {\n      setCurrentVideoDetails(response.data)\n      setNextVideos(filteredVideos)\n      setIsLoading(false)\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n    const filteredVideos = response.data.filter((video) => {\n      return video.id !== currentVideo.id\n    })\n\n  }, [props.match.params.id])\n  \n  // Set current video to url ID and then call api for video details & filter next videos\n  // componentDidMount() {\n  //   console.log('home mount')\n  //   axios.get(`${apiURL}/videos`)\n  //   .then((response) => {\n  //     this.setState({\n  //       currentVideo: response.data.find((video) => {\n  //         return video.id === this.props.match.params.id\n  //       })\n  //     }, () => {\n  //       axios.get(`${apiURL}/videos/${this.state.currentVideo.id}`)\n  //       .then((response) => {\n  //           this.setState({\n  //             currentVideoDetails: response.data,\n  //             nextVideos: filteredVideos, \n  //             isLoading: false\n  //           })\n  //       })\n  //       .catch((error) => {\n  //           console.log(error)\n  //       })\n  //       const filteredVideos = response.data.filter((video) => {\n  //         return video.id !== this.state.currentVideo.id\n  //       })\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n\n  // Update only if url changes or if comments are added / deleted\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n  return (\n    <>\n    {!isLoading ? \n      <>\n        <Video currentVideo={currentVideo}/>\n        <main>\n          <div className=\"left-containter\">\n            <VideoDetails {...props} videoDetails={currentVideoDetails}/>\n          </div>\n          <NextVideos videos={nextVideos}/>\n        </main>\n      </>\n    : <div className=\"loading\">\n        <p>Loading...</p>\n        <p>If this takes too long, check server</p>\n      </div>}\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}