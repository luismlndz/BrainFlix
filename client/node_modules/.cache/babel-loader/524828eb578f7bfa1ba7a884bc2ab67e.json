{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default function Home(props) {\n  _s();\n\n  const [video, setVideo] = useEffect({});\n  const [nextVideos, setNextVideos] = useEffect([]);\n  const [isLoading, setIsLoading] = useEffect(true); // state = {\n  //   video: {},\n  //   nextVideos: [],\n  //   isLoading: true\n  // }\n\n  useEffect(() => {\n    axios.get(`${apiURL}/videos`).then(response => {\n      let current = response.data.find(video => {\n        return video.id === props.match.params.id;\n      });\n      setNextVideos(response.data.filter(video => {\n        return video.id !== props.match.params.id;\n      }));\n      return current;\n    }).then(current => {\n      axios.get(`${apiURL}/videos/${current.id}`).then(response => {\n        setVideo(response.data);\n        setIsLoading(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.match.params.id]); // Set current video to url ID and then call api for video details & filter next videos\n  // componentDidMount() {\n  //   axios.get(`${apiURL}/videos`)\n  //   .then((response) => {\n  //     let current = response.data.find((video) => {\n  //       return video.id === this.props.match.params.id\n  //     })\n  //     this.setState({\n  //       nextVideos: response.data.filter((video) => {\n  //         return video.id !== this.props.match.params.id\n  //       })\n  //     })\n  //     return current\n  //   })\n  //   .then((current) => {\n  //     axios.get(`${apiURL}/videos/${current.id}`)\n  //     .then((response) => {\n  //       this.setState({\n  //         video: response.data,\n  //         isLoading: false\n  //       })\n  //     })\n  //     .catch((error) => {\n  //         console.log(error)\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n  // // Update only if url changes or if comments are added / deleted\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        videoDetails: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-containter\",\n          children: /*#__PURE__*/_jsxDEV(VideoDetails, { ...props,\n            videoDetails: video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n          videos: nextVideos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If this takes too long, check server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"6Q2OmtnOCla5YY4UXBW/sPpFZmQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/pages/Home/Home.js"],"names":["Component","useState","useEffect","Video","VideoDetails","NextVideos","axios","apiURL","Home","props","video","setVideo","nextVideos","setNextVideos","isLoading","setIsLoading","get","then","response","current","data","find","id","match","params","filter","catch","error","console","log"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'http://localhost:8080'\n\nexport default function Home(props){\n  const [video, setVideo] = useEffect({})\n  const [nextVideos, setNextVideos] = useEffect([])\n  const [isLoading, setIsLoading] = useEffect(true)\n\n  // state = {\n  //   video: {},\n  //   nextVideos: [],\n  //   isLoading: true\n  // }\n\n  useEffect(() => {\n    axios.get(`${apiURL}/videos`)\n    .then((response) => {\n      let current = response.data.find((video) => {\n        return video.id === props.match.params.id\n      })\n      setNextVideos(response.data.filter((video) => {\n        return video.id !== props.match.params.id\n      }))\n      return current\n    })\n    .then((current) => {\n      axios.get(`${apiURL}/videos/${current.id}`)\n      .then((response) => {\n        setVideo(response.data)\n        setIsLoading(false)\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }, [props.match.params.id])\n\n  // Set current video to url ID and then call api for video details & filter next videos\n  // componentDidMount() {\n  //   axios.get(`${apiURL}/videos`)\n  //   .then((response) => {\n  //     let current = response.data.find((video) => {\n  //       return video.id === this.props.match.params.id\n  //     })\n  //     this.setState({\n  //       nextVideos: response.data.filter((video) => {\n  //         return video.id !== this.props.match.params.id\n  //       })\n  //     })\n  //     return current\n  //   })\n  //   .then((current) => {\n  //     axios.get(`${apiURL}/videos/${current.id}`)\n  //     .then((response) => {\n  //       this.setState({\n  //         video: response.data,\n  //         isLoading: false\n  //       })\n  //     })\n  //     .catch((error) => {\n  //         console.log(error)\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n\n  // // Update only if url changes or if comments are added / deleted\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n    return (\n      <>\n      {!isLoading ? \n        <>\n          <Video videoDetails={video}/>\n          <main>\n            <div className=\"left-containter\">\n              <VideoDetails {...props} videoDetails={video}/>\n            </div>\n            <NextVideos videos={nextVideos}/>\n          </main>\n        </>\n      : <div className=\"loading\">\n          <p>Loading...</p>\n          <p>If this takes too long, check server</p>\n        </div>}\n      </>\n    );\n}"]},"metadata":{},"sourceType":"module"}