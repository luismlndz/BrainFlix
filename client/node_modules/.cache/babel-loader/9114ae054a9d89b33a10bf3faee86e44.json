{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useEffect, useState } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://project-2-api.herokuapp.com';\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796';\nexport default function Home(props) {\n  _s();\n\n  const [currentVideo, setCurrentVideo] = useState({});\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n      this.setState({\n        currentVideo: response.data.find(video => {\n          return video.id === this.props.match.params.id;\n        })\n      }, () => {\n        const filteredVideos = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          videos: filteredVideos\n        }, () => {\n          this.setState({\n            isLoading: false\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.match.params.id]); // state = {\n  //   currentVideo: {},\n  //   videos: [],\n  //   isLoading: true\n  // }\n  // componentDidMount() {\n  //   axios.get(`${apiURL}/videos/${apiKEY}`)\n  //   .then((response) => {\n  //     this.setState({\n  //       currentVideo: response.data.find((video) => {\n  //         return video.id === this.props.match.params.id\n  //       })\n  //     }, () => {\n  //       const filteredVideos = response.data.filter((video) => {\n  //         return video.id !== this.state.currentVideo.id\n  //       })\n  //       this.setState({videos: filteredVideos}, () => {\n  //         this.setState({isLoading: false})\n  //       })\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n  const handleUpdate = video => {\n    this.setState({\n      currentVideo: video\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: currentVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-containter\",\n          children: /*#__PURE__*/_jsxDEV(VideoDetails, {\n            currentVideo: currentVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n          handleUpdate: handleUpdate,\n          videos: videos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"octe6CaFNtwblwIGp4wmnDGf+OM=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js"],"names":["Component","useEffect","useState","Video","VideoDetails","NextVideos","axios","apiURL","apiKEY","Home","props","currentVideo","setCurrentVideo","videos","setVideos","isLoading","setIsLoading","get","then","response","setState","data","find","video","id","match","params","filteredVideos","filter","state","catch","error","console","log","handleUpdate"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,MAAM,GAAG,qCAAf;AACA,MAAMC,MAAM,GAAG,+CAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACW,GAAN,CAAW,GAAEV,MAAO,WAAUC,MAAO,EAArC,EACCU,IADD,CACOC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZT,QAAAA,YAAY,EAAEQ,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAoBC,KAAD,IAAW;AAC1C,iBAAOA,KAAK,CAACC,EAAN,KAAa,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBF,EAA5C;AACD,SAFa;AADF,OAAd,EAIG,MAAM;AACP,cAAMG,cAAc,GAAGR,QAAQ,CAACE,IAAT,CAAcO,MAAd,CAAsBL,KAAD,IAAW;AACrD,iBAAOA,KAAK,CAACC,EAAN,KAAa,KAAKK,KAAL,CAAWlB,YAAX,CAAwBa,EAA5C;AACD,SAFsB,CAAvB;AAGA,aAAKJ,QAAL,CAAc;AAACP,UAAAA,MAAM,EAAEc;AAAT,SAAd,EAAwC,MAAM;AAC5C,eAAKP,QAAL,CAAc;AAACL,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFD;AAGD,OAXD;AAYD,KAdD,EAeCe,KAfD,CAeQC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBD;AAkBD,GAnBQ,EAmBN,CAACrB,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBF,EAApB,CAnBM,CAAT,CALkC,CA0BlC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,YAAY,GAAIX,KAAD,IAAW;AAC9B,SAAKH,QAAL,CAAc;AAACT,MAAAA,YAAY,EAAEY;AAAf,KAAd;AACD,GAFD;;AAKE,sBACE;AAAA,cACC,CAACR,SAAD,gBACC;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,YAAY,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,YAAY,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,YAAY,EAAEuB,YAA1B;AAAwC,UAAA,MAAM,EAAErB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADD,gBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF,mBADF;AAgBH;;GAhFuBJ,I;;KAAAA,I","sourcesContent":["import { Component, useEffect, useState } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'https://project-2-api.herokuapp.com'\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796'\n\nexport default function Home(props) {\n  const [currentVideo, setCurrentVideo] = useState({})\n  const [videos, setVideos] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    axios.get(`${apiURL}/videos/${apiKEY}`)\n    .then((response) => {\n      this.setState({\n        currentVideo: response.data.find((video) => {\n          return video.id === this.props.match.params.id\n        })\n      }, () => {\n        const filteredVideos = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({videos: filteredVideos}, () => {\n          this.setState({isLoading: false})\n        })\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }, [props.match.params.id])\n\n  // state = {\n  //   currentVideo: {},\n  //   videos: [],\n  //   isLoading: true\n  // }\n\n  // componentDidMount() {\n  //   axios.get(`${apiURL}/videos/${apiKEY}`)\n  //   .then((response) => {\n  //     this.setState({\n  //       currentVideo: response.data.find((video) => {\n  //         return video.id === this.props.match.params.id\n  //       })\n  //     }, () => {\n  //       const filteredVideos = response.data.filter((video) => {\n  //         return video.id !== this.state.currentVideo.id\n  //       })\n  //       this.setState({videos: filteredVideos}, () => {\n  //         this.setState({isLoading: false})\n  //       })\n  //     })\n  //   })\n  //   .catch((error) => {\n  //     console.log(error)\n  //   })\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.match.params.id !== this.props.match.params.id) {\n  //     this.componentDidMount()\n  //   }\n  // }\n\n  const handleUpdate = (video) => {\n    this.setState({currentVideo: video})\n  }\n\n\n    return (\n      <>\n      {!isLoading ? \n        <>\n          <Video currentVideo={currentVideo}/>\n          <main>\n            <div className=\"left-containter\">\n              <VideoDetails currentVideo={currentVideo}/>\n            </div>\n            <NextVideos handleUpdate={handleUpdate} videos={videos}/>\n          </main>\n        </>\n      : <p>Loading</p>}\n      </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}