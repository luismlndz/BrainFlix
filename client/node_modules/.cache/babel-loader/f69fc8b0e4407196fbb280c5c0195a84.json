{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js\";\nimport \"./CommentSection.scss\";\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default class CommentSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: []\n    };\n\n    this.handleAdd = comment => {\n      axios.post(`${apiURL}/videos/${this.props.videoDetails.id}/comments/`, comment).then(response => {\n        this.setState({\n          comments: this.state.comments.concat(response.data)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleDelete = id => {\n      axios.delete(`${apiURL}/videos/${this.props.videoDetails.id}/comments/${id}/`).then(() => {\n        this.setState({\n          comments: this.state.comments.filter(comment => {\n            return comment.id !== id;\n          })\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('comment section mount');\n    axios.get(`${apiURL}/videos/${this.props.videoDetails.id}/`).then(response => {\n      this.setState({\n        comments: response.data.comments\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps) {// if(prevProps.videoDetails.comments !== this.props.videoDetails.comments){\n    //     this.componentDidMount()\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-count\",\n        children: `${this.state.comments.length} Comments`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), this.state.comments.sort((x, y) => {\n        return y.timestamp - x.timestamp;\n      }).map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n        deleteComment: this.handleDelete,\n        comment: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js"],"names":["CommentForm","Comment","axios","Component","apiURL","CommentSection","state","comments","handleAdd","comment","post","props","videoDetails","id","then","response","setState","concat","data","catch","error","console","log","handleDelete","delete","filter","componentDidMount","get","componentDidUpdate","prevProps","render","length","sort","x","y","timestamp","map","index"],"mappings":"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","sourcesContent":["import \"./CommentSection.scss\"\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nconst apiURL = 'http://localhost:8080'\n\nexport default class CommentSection extends Component {\n\n    state = {\n        comments: []\n    }\n\n    componentDidMount() {\n        console.log('comment section mount')\n        axios.get(`${apiURL}/videos/${this.props.videoDetails.id}/`)\n        .then((response) => {\n            this.setState({comments: response.data.comments})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        // if(prevProps.videoDetails.comments !== this.props.videoDetails.comments){\n        //     this.componentDidMount()\n        // }\n    }\n\n    handleAdd = (comment) => {\n        axios.post(`${apiURL}/videos/${this.props.videoDetails.id}/comments/`, comment)\n        .then((response) => {\n            this.setState({comments: this.state.comments.concat(response.data)})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    handleDelete = (id) => {\n        axios.delete(`${apiURL}/videos/${this.props.videoDetails.id}/comments/${id}/`)\n        .then(() => {\n            this.setState({comments: this.state.comments.filter((comment) => {\n                return comment.id !== id\n            })})\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <p className=\"comment-count\">{`${this.state.comments.length} Comments`}</p>\n                <CommentForm addComment={this.handleAdd}/>\n                {this.state.comments.sort((x, y) => {\n                    return y.timestamp - x.timestamp\n                }).map((comment, index) => (\n                    <Comment deleteComment={this.handleDelete} key={index} comment={comment}/>\n                ))}\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}