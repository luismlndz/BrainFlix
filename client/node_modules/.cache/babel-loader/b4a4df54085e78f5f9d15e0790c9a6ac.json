{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js\";\nimport { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport CommentSection from '../../components/CommentSection.js/CommentSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://project-2-api.herokuapp.com';\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentVideo: {},\n      data: {},\n      isLoading: true\n    };\n\n    this.handleUpdate = video => {\n      const newVideo = this.state.data.find(vid => {\n        return vid.id === video.id;\n      });\n      this.setState({\n        currentVideo: newVideo\n      });\n    };\n\n    this.showResults = () => {\n      if (!this.state.isLoading) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Video, {\n            currentVideo: this.state.currentVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-containter\",\n              children: /*#__PURE__*/_jsxDEV(CommentSection, { ...this.props,\n                currentVideo: this.state.currentVideo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n              handleUpdate: this.handleUpdate,\n              videos: this.state.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"COMP DID MOUNT\");\n    console.log(this.props);\n    axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n      this.setState({\n        currentVideo: response.data[0]\n      }, () => {\n        const filteredArray = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          data: filteredArray\n        }, () => {\n          this.setState({\n            isLoading: false\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Rendering the component only if\n    // passed props value is changed\n    console.log(nextProps);\n    console.log(this.props);\n\n    if (nextProps.match.url !== this.props.match.url) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"COMP DID UPDATE\");\n    console.log(this.props);\n\n    if (prevState.currentVideo !== this.state.currentVideo) {\n      axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n        const filteredArray = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          data: filteredArray\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.showResults(), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-containter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js"],"names":["Component","Video","NextVideos","CommentSection","axios","apiURL","apiKEY","Home","state","currentVideo","data","isLoading","handleUpdate","video","newVideo","find","vid","id","setState","showResults","props","componentDidMount","console","log","get","then","response","filteredArray","filter","catch","error","shouldComponentUpdate","nextProps","match","url","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,MAAM,GAAG,qCAAf;AACA,MAAMC,MAAM,GAAG,+CAAf;AAEA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE1CQ,KAF0C,GAElC;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFkC;;AAAA,SA2B1CC,YA3B0C,GA2B1BC,KAAD,IAAW;AACxB,YAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,IAAhB,CAAsBC,GAAD,IAAS;AAC7C,eAAOA,GAAG,CAACC,EAAJ,KAAWJ,KAAK,CAACI,EAAxB;AACD,OAFgB,CAAjB;AAGA,WAAKC,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAEK;AAAf,OAAd;AACD,KAhCyC;;AAAA,SAgE1CK,WAhE0C,GAgE5B,MAAM;AAClB,UAAG,CAAC,KAAKX,KAAL,CAAWG,SAAf,EAA0B;AACxB,4BACE;AAAA,kCACA,QAAC,KAAD;AAAO,YAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,oCACA;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCAEE,QAAC,cAAD,OAAoB,KAAKW,KAAzB;AAAgC,gBAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWC;AAAzD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBADA,eAKE,QAAC,UAAD;AAAY,cAAA,YAAY,EAAE,KAAKG,YAA/B;AAA6C,cAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE;AAAhE;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,wBADF;AAYD,OAbD,MAaO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAjFyC;AAAA;;AAQ1CW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACAhB,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEnB,MAAO,WAAUC,MAAO,EAArC,EACCmB,IADD,CACOC,QAAD,IAAc;AAClB,WAAKR,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAEiB,QAAQ,CAAChB,IAAT,CAAc,CAAd;AAAf,OAAd,EAAgD,MAAM;AACpD,cAAMiB,aAAa,GAAGD,QAAQ,CAAChB,IAAT,CAAckB,MAAd,CAAsBf,KAAD,IAAW;AACpD,iBAAOA,KAAK,CAACI,EAAN,KAAa,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAA5C;AACD,SAFqB,CAAtB;AAGA,aAAKC,QAAL,CAAc;AAACR,UAAAA,IAAI,EAAEiB;AAAP,SAAd,EAAqC,MAAM;AACzC,eAAKT,QAAL,CAAc;AAACP,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFD;AAGD,OAPD;AAQD,KAVD,EAWCkB,KAXD,CAWQC,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAbD;AAcD;;AASDC,EAAAA,qBAAqB,CAAEC,SAAF,EAAa;AAChC;AACA;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;;AACA,QAAIY,SAAS,CAACC,KAAV,CAAgBC,GAAhB,KAAwB,KAAKd,KAAL,CAAWa,KAAX,CAAiBC,GAA7C,EAAkD;AAChD,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCf,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;;AACA,QAAGiB,SAAS,CAAC5B,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAAzC,EAAuD;AACrDL,MAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEnB,MAAO,WAAUC,MAAO,EAArC,EACCmB,IADD,CACOC,QAAD,IAAc;AAClB,cAAMC,aAAa,GAAGD,QAAQ,CAAChB,IAAT,CAAckB,MAAd,CAAsBf,KAAD,IAAW;AACpD,iBAAOA,KAAK,CAACI,EAAN,KAAa,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAA5C;AACD,SAFqB,CAAtB;AAGA,aAAKC,QAAL,CAAc;AAACR,UAAAA,IAAI,EAAEiB;AAAP,SAAd;AACD,OAND,EAOCE,KAPD,CAOQC,KAAD,IAAW;AAChBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,OATD;AAUD;AACF;;AAqBDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACC,KAAKnB,WAAL,EADD,eAGA;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA,oBADF;AAiBD;;AArGyC","sourcesContent":["import { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport CommentSection from '../../components/CommentSection.js/CommentSection';\nimport axios from 'axios';\nconst apiURL = 'https://project-2-api.herokuapp.com'\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796'\n\nexport default class Home extends Component {\n\n  state = {\n    currentVideo: {},\n    data: {},\n    isLoading: true\n  }\n\n  componentDidMount() {\n    console.log(\"COMP DID MOUNT\")\n    console.log(this.props)\n    axios.get(`${apiURL}/videos/${apiKEY}`)\n    .then((response) => {\n      this.setState({currentVideo: response.data[0]}, () => {\n        const filteredArray = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({data: filteredArray}, () => {\n          this.setState({isLoading: false})\n        })\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n  handleUpdate = (video) => {\n    const newVideo = this.state.data.find((vid) => {\n      return vid.id === video.id\n    })\n    this.setState({currentVideo: newVideo})\n  }\n\n  shouldComponentUpdate (nextProps) {\n    // Rendering the component only if\n    // passed props value is changed\n\n    console.log(nextProps)\n    console.log(this.props)\n    if (nextProps.match.url !== this.props.match.url) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"COMP DID UPDATE\")\n    console.log(this.props)\n    if(prevState.currentVideo !== this.state.currentVideo) {\n      axios.get(`${apiURL}/videos/${apiKEY}`)\n      .then((response) => {\n        const filteredArray = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({data: filteredArray})\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n    }\n  }\n\n  showResults = () => {\n    if(!this.state.isLoading) {\n      return (\n        <>\n        <Video currentVideo={this.state.currentVideo}/>\n        <main>\n        <div className=\"left-containter\">\n          {/* <Description currentVideo={this.state.currentVideo}/> */}\n          <CommentSection {...this.props} currentVideo={this.state.currentVideo}/>\n        </div>\n          <NextVideos handleUpdate={this.handleUpdate} videos={this.state.data}/>\n        </main>\n        </>\n      )\n    } else {\n      return <p>Loading...</p>\n    }\n  }\n\n  render() {\n    return (\n      <>\n      {this.showResults()}\n      {/* <Video currentVideo={this.state.currentVideo}/> */}\n      <main>\n        <div className=\"left-containter\">\n          {/* <Description currentVideo={this.state.currentVideo}/>\n          <CommentSection currentVideo={this.state.currentVideo}/> */}\n        </div>\n        {/* <NextVideos\n        data={this.state.data}\n        clickHandler={this.selectVideo} \n        currentVideo={this.state.currentVideo}\n        /> */}\n      </main>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}