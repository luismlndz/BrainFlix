{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js\",\n    _s = $RefreshSig$();\n\nimport \"./CommentSection.scss\";\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\nexport default function CommentSection(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    console.log('comment section mount');\n    axios.get(`${apiURL}/videos/${props.videoDetails.id}/`).then(response => {\n      setComments(response.data.comments);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.videoDetails]);\n\n  const handleAdd = comment => {\n    axios.post(`${apiURL}/videos/${props.videoDetails.id}/comments/`, comment).then(response => {\n      setComments(comments.concat(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleDelete = id => {\n    axios.delete(`${apiURL}/videos/${props.videoDetails.id}/comments/${id}`).then(res => {\n      setComments(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-count\",\n      children: comments.length === 1 ? `${comments.length} Comment` : `${comments.length} Comments`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      addComment: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), comments.sort((x, y) => {\n      return y.timestamp - x.timestamp;\n    }).map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n      deleteComment: handleDelete,\n      comment: comment\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(CommentSection, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/client/src/components/CommentSection/CommentSection.js"],"names":["CommentForm","Comment","axios","useEffect","useState","apiURL","CommentSection","props","comments","setComments","console","log","get","videoDetails","id","then","response","data","catch","error","handleAdd","comment","post","concat","handleDelete","delete","res","length","sort","x","y","timestamp","map","index"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEP,MAAO,WAAUE,KAAK,CAACM,YAAN,CAAmBC,EAAG,GAApD,EACCC,IADD,CACOC,QAAD,IAAc;AAChBP,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAcT,QAAf,CAAX;AACH,KAHD,EAICU,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GATQ,EASN,CAACZ,KAAK,CAACM,YAAP,CATM,CAAT;;AAWA,QAAMO,SAAS,GAAIC,OAAD,IAAa;AAC3BnB,IAAAA,KAAK,CAACoB,IAAN,CAAY,GAAEjB,MAAO,WAAUE,KAAK,CAACM,YAAN,CAAmBC,EAAG,YAArD,EAAkEO,OAAlE,EACCN,IADD,CACOC,QAAD,IAAc;AAChBP,MAAAA,WAAW,CAACD,QAAQ,CAACe,MAAT,CAAgBP,QAAQ,CAACC,IAAzB,CAAD,CAAX;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GARD;;AAUA,QAAMK,YAAY,GAAIV,EAAD,IAAQ;AACzBZ,IAAAA,KAAK,CAACuB,MAAN,CAAc,GAAEpB,MAAO,WAAUE,KAAK,CAACM,YAAN,CAAmBC,EAAG,aAAYA,EAAG,EAAtE,EACCC,IADD,CACOW,GAAD,IAAS;AACXjB,MAAAA,WAAW,CAACiB,GAAG,CAACT,IAAL,CAAX;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAND;AAOH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BX,QAAQ,CAACmB,MAAT,KAAoB,CAApB,GAAyB,GAAEnB,QAAQ,CAACmB,MAAO,UAA3C,GAAwD,GAAEnB,QAAQ,CAACmB,MAAO;AAAxG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,UAAU,EAAEP;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKZ,QAAQ,CAACoB,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,aAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACH,KAFA,EAEEC,GAFF,CAEM,CAACX,OAAD,EAAUY,KAAV,kBACH,QAAC,OAAD;AAAS,MAAA,aAAa,EAAET,YAAxB;AAAkD,MAAA,OAAO,EAAEH;AAA3D,OAA2CY,KAA3C;AAAA;AAAA;AAAA;AAAA,YAHH,CAHL;AAAA,kBADJ;AAWH;;GA7CuB3B,c;;KAAAA,c","sourcesContent":["import \"./CommentSection.scss\"\nimport CommentForm from \"../CommentForm/CommentForm\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst apiURL = 'http://localhost:8080'\n\nexport default function CommentSection(props) {\n    const [comments, setComments] = useState([])\n\n    useEffect(()=> {\n        console.log('comment section mount')\n        axios.get(`${apiURL}/videos/${props.videoDetails.id}/`)\n        .then((response) => {\n            setComments(response.data.comments)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }, [props.videoDetails])\n\n    const handleAdd = (comment) => {\n        axios.post(`${apiURL}/videos/${props.videoDetails.id}/comments/`, comment)\n        .then((response) => {\n            setComments(comments.concat(response.data))\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    const handleDelete = (id) => {\n        axios.delete(`${apiURL}/videos/${props.videoDetails.id}/comments/${id}`)\n        .then((res) => {\n            setComments(res.data)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <>\n            <p className=\"comment-count\">{comments.length === 1 ? `${comments.length} Comment` : `${comments.length} Comments`}</p>\n            <CommentForm addComment={handleAdd}/>\n            {comments.sort((x, y) => {\n                return y.timestamp - x.timestamp\n            }).map((comment, index) => (\n                <Comment deleteComment={handleDelete} key={index} comment={comment}/>\n            ))}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}