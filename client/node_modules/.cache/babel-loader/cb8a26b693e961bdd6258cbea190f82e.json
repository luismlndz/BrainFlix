{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js\";\nimport { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://project-2-api.herokuapp.com';\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentVideo: {},\n      videos: [],\n      isLoading: true\n    };\n\n    this.handleUpdate = video => {\n      const newVideo = this.state.videos.find(vid => {\n        return vid.id === video.id;\n      });\n      this.setState({\n        currentVideo: newVideo\n      });\n    };\n\n    this.showResults = () => {\n      if (!this.state.isLoading) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Video, {\n            currentVideo: this.state.currentVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-containter\",\n              children: /*#__PURE__*/_jsxDEV(VideoDetails, {\n                currentVideo: this.state.currentVideo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n              handleUpdate: this.handleUpdate,\n              videos: this.state.videos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n      console.log('current props');\n      console.log(this.props);\n      this.setState({\n        currentVideo: response.data[0]\n      }, () => {\n        const filteredVideos = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          videos: filteredVideos\n        }, () => {\n          this.setState({\n            isLoading: false\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prev props');\n    console.log(prevProps);\n\n    if (this.props.match.params.id === this.state.currentVideo.id) {\n      axios.get(`${apiURL}/videos/${apiKEY}`).then(response => {\n        const filteredArray = response.data.filter(video => {\n          return video.id !== this.state.currentVideo.id;\n        });\n        this.setState({\n          videos: filteredArray\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.showResults()\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/brainstation/BrainFlix/luis-melendez-brainflix/src/pages/Home/Home.js"],"names":["Component","Video","VideoDetails","NextVideos","axios","apiURL","apiKEY","Home","state","currentVideo","videos","isLoading","handleUpdate","video","newVideo","find","vid","id","setState","showResults","componentDidMount","get","then","response","console","log","props","data","filteredVideos","filter","catch","error","componentDidUpdate","prevProps","prevState","match","params","filteredArray","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport '../../BrainFlix.scss';\nimport Video from '../../components/Video/Video';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport NextVideos from '../../components/NextVideos/NextVideos';\nimport axios from 'axios';\nconst apiURL = 'https://project-2-api.herokuapp.com'\nconst apiKEY = '?api_key=67e1a87f-213f-4fba-b06e-69697646e796'\n\nexport default class Home extends Component {\n\n  state = {\n    currentVideo: {},\n    videos: [],\n    isLoading: true\n  }\n\n  componentDidMount() {\n    axios.get(`${apiURL}/videos/${apiKEY}`)\n    .then((response) => {\n      console.log('current props')\n      console.log(this.props)\n      this.setState({\n        currentVideo: response.data[0]\n      }, () => {\n        const filteredVideos = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({videos: filteredVideos}, () => {\n          this.setState({isLoading: false})\n        })\n      })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n\n\n  handleUpdate = (video) => {\n    const newVideo = this.state.videos.find((vid) => {\n      return vid.id === video.id\n    })\n    this.setState({currentVideo: newVideo})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prev props')\n    console.log(prevProps)\n    if(this.props.match.params.id === this.state.currentVideo.id) {\n      axios.get(`${apiURL}/videos/${apiKEY}`)\n      .then((response) => {\n        const filteredArray = response.data.filter((video) => {\n          return video.id !== this.state.currentVideo.id\n        })\n        this.setState({videos: filteredArray})\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n    }\n  }\n\n  showResults = () => {\n    if(!this.state.isLoading) {\n      return (\n        <>\n        <Video currentVideo={this.state.currentVideo}/>\n        <main>\n          <div className=\"left-containter\">\n            <VideoDetails currentVideo={this.state.currentVideo}/>\n          </div>\n          <NextVideos handleUpdate={this.handleUpdate} videos={this.state.videos}/>\n        </main>\n        </>\n      )\n    } else {\n      return <p>Loading...</p>\n    }\n  }\n\n  render() {\n    return (\n      <>\n      {this.showResults()}\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}